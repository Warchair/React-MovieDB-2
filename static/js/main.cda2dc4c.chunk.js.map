{"version":3,"sources":["Component/Navbar.js","Component/data/data-api.js","Component/sticky.js","View/Search.js","Component/formSearch.js","Component/FooterMovie.js","Component/carousel.js","View/Home.js","View/Details.js","View/Genres.js","App.js","index.js"],"names":["NavbarMovie","props","useState","isOpen","setIsOpen","Navbar","className","dark","expand","class","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","DropdownMenu","right","DropdownItem","divider","NavItem","NavLink","apikey","url","nowPlaying","TopRated","UpComing","MoviesUrl","discoverUrl","searchUrl","TVPopular","TVTopRated","TVLatest","TVOnTheAir","TVAiringToday","searchTVUrl","fetchImages","type","id","a","axios","get","params","api_key","data","modifiedData","map","m","backdrop_path","console","log","fetchSearch","keyword","pages","language","query","page","totalpages","poster","title","fetchTVSearch","fetchGenre","genre_id","genre_type","genre_page","with_genres","carousel","i","image","no","backposter","vote_average","slide","fetchPlaying","fetchTopRated","fetchUpComing","fetchDetails","fetchTrailer","fetchCast","name","character","fetchCrews","known_for_department","job","fetchSimilar","fetchRecommendMovie","fetchTVPopular","fetchTVTopRated","fetchTVOnTheAir","fetchTVLatest","fetchTVAiringToday","Sticky","valueScroll","setValueScroll","window","addEventListener","event","preventDefault","this","scrollY","e","scrollTo","handleClick","DataSearch","match","resultSearch","setResultSearch","resultTVSearch","setResultTVSearch","inputValue","setInputValue","currentPage","setCurrentPage","inputSearch","totalPages","inputTVSearch","totalPagesTV","state","setState","Math","floor","random","items","number","push","useEffect","replace","Number","fetchAPI","pageLimit","items1","dotleft","length","sliced","slice","sliced1","Pagination","Item","active","paginations","dataSearch","item","index","to","src","alt","dataTVSearch","handleForm","location","onSubmit","placeholder","value","onChange","target","FormSearch","FooterMovie","fontSize","Component","CarouselMovies","selected","SetSelected","carouselMovies","setCarouselMovies","trailer","setTrailer","valueTrailer","setValueTrailer","fetchMovies","input1","checked","select","label1","for","TrailerMovie","Modal","size","aria-labelledby","centered","Header","closeButton","Title","style","color","fontWeight","Body","backgroundColor","undefined","key","playing","width","show","onHide","Home","setNowPlaying","topRated","setTopRated","upComing","setUpComing","inicarousel","setInicarousel","tvPopular","setTvPopular","tvTopRated","setTvTopRated","setTvLatest","tvOnTheAir","setTvOnTheAir","tvAiringToday","setTvAiringToday","MoviesPlaying","MovieTopRated","MovieUpComing","tvShowsPopular","tvShowsTopRated","tvShowsOnTheAir","tvShowsAiringToday","MovieList","TvShowsList","carouselFetch","Details","details","setDetails","casts","setCasts","crews","setCrews","similar","setSimilar","recommendMovie","setRecommendMovie","images","setImages","ImagesList","castList","RecommendMovieList","SimilarMovie","director","screenplay","story","producer","exproducer","music","DoP","genreMovie","genre","genres","val","runtime","hour","minute","maxHeight","overflow","poster_path","count","overview","join","budget","revenue","original_language","production_companies","Genres","movieGenres","setMovieGenres","resultsGenres","MovieData","App","path","exact","component","Search","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cda2dc4c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText\r\n} from 'reactstrap';\r\n\r\nconst NavbarMovie = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navbar\" dark expand=\"md\">\r\n        <div class=\"container\">\r\n        <NavbarBrand href=\"/\">Movie<strong>GO</strong></NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n          <UncontrolledDropdown nav inNavbar className=\"mr-4\">\r\n              <DropdownToggle nav>\r\n                Recommended Film\r\n              </DropdownToggle>\r\n              <DropdownMenu right>\r\n                <DropdownItem>\r\n                  Option 1\r\n                </DropdownItem>\r\n                <DropdownItem>\r\n                  Option 2\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>\r\n                  Reset\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            <NavItem className=\"mr-4\">\r\n              <NavLink href=\"/\">News</NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"mr-4\">\r\n              <NavLink href=\"#about-us\" >About Us</NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"mr-4\">\r\n              <NavLink href=\"mailto:chairulsp2@gmail.com\">Contact Us</NavLink>\r\n            </NavItem>\r\n            {/* <button className=\"btn sign-in mr-3\">SIGN IN</button>\r\n            <button className=\"btn sign-up\">SIGN UP</button> */}\r\n          </Nav>\r\n        </Collapse>\r\n        </div>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarMovie;","import { ContactsOutlined } from '@material-ui/icons';\r\nimport axios from 'axios';\r\n\r\nconst apikey = '421b76897a0a25d2886c0ec4f0e51942';\r\nconst url = 'https://api.themoviedb.org/3';\r\nconst nowPlaying = `${url}/movie/now_playing`;\r\nconst TopRated = `${url}/movie/top_rated`;\r\nconst UpComing = `${url}/movie/upcoming`;\r\nconst MoviesUrl = `${url}/movie`;\r\nconst discoverUrl = `${url}/discover`;\r\nconst searchUrl = `${url}/search/movie`;\r\n\r\nconst TVUrl =   `${url}/tv`;\r\nconst TVPopular =  `${url}/tv/popular`;\r\nconst TVTopRated = `${url}/tv/top_rated`;\r\nconst TVLatest = `${url}/tv/latest`;\r\nconst TVOnTheAir = `${url}/tv/on_the_air`;\r\nconst TVAiringToday = `${url}/tv/airing_today`;\r\nconst searchTVUrl = `${url}/search/tv`;\r\n\r\n\r\n\r\n// data for images \r\n\r\nexport const fetchImages = async (type, id) => {\r\n    try {\r\n        const { data } = await axios.get(`${MoviesUrl}/${id}/images`, {\r\n            params: {\r\n                api_key:apikey,\r\n            }\r\n        });\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['backdrops'].map((m) => ({\r\n            backdrop_path: image +  m['file_path']\r\n        }))\r\n\r\n        console.log(type, id);\r\n        return modifiedData;\r\n    } catch(error) {}\r\n}\r\n\r\n\r\n// data for input Search\r\nexport const fetchSearch = async (keyword, pages) => {\r\n    try {\r\n        const { data } = await axios.get(searchUrl, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                query:keyword,\r\n                page:pages\r\n            }\r\n        })\r\n        const totalpages = data['total_pages'];\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['title']\r\n        }))\r\n        return [modifiedData, totalpages];\r\n    } catch(error) {}\r\n}\r\n\r\nexport const fetchTVSearch = async (keyword, pages) => {\r\n    try {\r\n        const { data } = await axios.get(searchTVUrl, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                query:keyword,\r\n                page:pages\r\n            }\r\n        })\r\n        const totalpages = data['total_pages'];\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['name']\r\n        }))\r\n        return [modifiedData, totalpages];\r\n    } catch(error) {}\r\n}\r\n\r\n\r\n// data for Genre Movies\r\nexport const fetchGenre = async (genre_id, genre_type, genre_page) => {\r\n    try {\r\n        const { data } = await axios.get(`${discoverUrl}/${genre_type}`,  {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                with_genres:genre_id,\r\n                page:genre_page,\r\n            }\r\n        })\r\n\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const totalpages = data['total_pages'];\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            title:m['title'],\r\n            poster:image + m['poster_path']\r\n        }))\r\n        // console.log(totalpages);\r\n\r\n        return [modifiedData, totalpages];\r\n    } catch(error) {}\r\n}\r\n\r\n\r\n// data for Carousel News Trailer\r\nexport const carousel = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlaying, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n\r\n        for(let i = 0; i<5; i++) {\r\n            data['results'][i]['no'] = `s${i}`;\r\n            data['results'][i]['slide'] = `slide${i}`;\r\n        }\r\n\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n                    id:m['id'],\r\n                    poster: image + m['poster_path'],\r\n                    title:m['title'],\r\n                    no:m['no'],\r\n                    backposter: image + m['backdrop_path'],\r\n                    vote_average:m['vote_average'],\r\n                    slide:m['slide'],\r\n        }));\r\n\r\n        return modifiedData;\r\n    }catch(error) {}\r\n}\r\n\r\n\r\n// data for Movies\r\n\r\n\r\nexport const fetchPlaying = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlaying, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n\r\n        // const md = data['results'];\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            poster: image + m['poster_path'],\r\n            title:m['title'],\r\n            // slider:slide,\r\n            backposter: image + m['backdrop_path'],\r\n            vote_average:m['vote_average']\r\n        }));\r\n        \r\n        // console.log(modifiedData);\r\n        return modifiedData;\r\n\r\n    } catch(error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchTopRated = async () => {\r\n    try {\r\n        const { data } = await axios.get(TopRated, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['title'],\r\n            vote_average:m['vote_average']\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch(error ) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchUpComing = async () => {\r\n    try {\r\n        const { data } = await axios.get(UpComing, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['title'],\r\n            vote_average:m['vote_average']\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch(error ) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const fetchDetails = async (id, type) => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/${type}/${id}`, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n            }\r\n        })\r\n        return data;\r\n\r\n    } catch(error) {}\r\n}\r\n\r\nexport const fetchTrailer = async (id, type) => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/${type}/${id}/videos`, {\r\n            params: {\r\n                api_key: apikey,\r\n                language:'en_US',\r\n            }\r\n        })\r\n\r\n        return data['results'][0];\r\n    } catch(error) {}\r\n}\r\n\r\nexport const fetchCast = async (id, type) => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/${type}/${id}/credits`, {\r\n            params: {\r\n                api_key: apikey,\r\n                language:'en_US',\r\n            }\r\n        })\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['cast'].map((m) => ({\r\n            id:m['id'],\r\n            name:m['name'],\r\n            character:m['character'],\r\n            image: image + m['profile_path'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch(error) {}\r\n}\r\n\r\nexport const fetchCrews = async (id, type) => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/${type}/${id}/credits`, {\r\n            params: {\r\n                api_key: apikey,\r\n                language:'en_US',\r\n            }\r\n        })\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['crew'].map((m) => ({\r\n            id:m['id'],\r\n            name:m['name'],\r\n            known_for_department:m['known_for_department'],\r\n            image: image + m['profile_path'],\r\n            job: m['job'],\r\n            \r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch(error) {}\r\n}\r\n\r\n\r\nexport const fetchSimilar = async (id, type) => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/${type}/${id}/similar`, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            title:m['title'],\r\n            poster:image + m['poster_path'],\r\n            vote_average: m['vote_average']\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch(error) {}\r\n}\r\n\r\nexport const fetchRecommendMovie = async (id, type) => {\r\n\r\n    const { data } = await axios.get(`${url}/${type}/${id}/recommendations`, {\r\n        params: {\r\n            api_key:apikey,\r\n            language:'en_US',\r\n            page:1,\r\n        }\r\n    })\r\n    const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            title:m['title'],\r\n            poster:image + m['poster_path'],\r\n            vote_average: m['vote_average']\r\n        }))\r\n    return modifiedData;\r\n}\r\n\r\n\r\n\r\n// data fro TV Shows\r\n\r\nexport const fetchTVPopular = async () => {\r\n    try {\r\n        const { data } = await axios.get(TVPopular, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['name'],\r\n            vote_average:m['vote_average']\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch(error ) {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchTVTopRated = async () => {\r\n    try {\r\n        const { data } = await axios.get(TVTopRated, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['name']\r\n        }))\r\n        return modifiedData;\r\n\r\n    } catch(error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchTVOnTheAir = async () => {\r\n    try {\r\n        const { data } = await axios.get(TVOnTheAir, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['name']\r\n        }))\r\n        return modifiedData;\r\n\r\n    } catch(error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchTVLatest = async () => {\r\n    try {\r\n        const { data } = await axios.get(TVLatest, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data.map((m) => ({\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['name']\r\n        }))\r\n        return modifiedData;\r\n\r\n    } catch(error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchTVAiringToday = async () => {\r\n    try {\r\n        const { data } = await axios.get(TVAiringToday, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US',\r\n                page:1\r\n            }\r\n        })\r\n        const image = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id:m['id'],\r\n            poster:image + m['poster_path'],\r\n            title:m['name']\r\n        }))\r\n        return modifiedData;\r\n\r\n    } catch(error) {\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDetailsTV = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${TVUrl}/${id}${id}`, {\r\n            params: {\r\n                api_key:apikey,\r\n                language:'en_US'\r\n            }\r\n        });\r\n\r\n        return data;\r\n    } catch(error) {\r\n\r\n    }\r\n}\r\n\r\n\r\n// export const fetchCrews = async (id) => {\r\n//     try {\r\n        \r\n//     } catch(error) {\r\n\r\n//     }\r\n// }\r\n\r\n// export const fetchCrews = async (id) => {\r\n//     try {\r\n        \r\n//     } catch(error) {\r\n        \r\n//     }\r\n// }\r\n\r\n// export const fetchCrews = async (id) => {\r\n//     try {\r\n        \r\n//     } catch(error) {\r\n        \r\n//     }\r\n// }\r\n\r\n// export const fetchCrews = async (id) => {\r\n//     try {\r\n        \r\n//     } catch(error) {\r\n        \r\n//     }\r\n// }\r\n","import React, { Component, useState } from 'react';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n\r\nfunction Sticky(props) {\r\n    \r\n    const handleClick = (e) =>  {\r\n        e.preventDefault();\r\n        window.scrollTo(0, 0);\r\n    }\r\n    const [valueScroll, setValueScroll] = useState(0);\r\n    window.addEventListener(\"scroll\", function(event) {\r\n        event.preventDefault();\r\n        // this.scrollY = props.scrollOn;\r\n        // this.scroll(props.scrollOn);\r\n        setValueScroll(this.scrollY);\r\n    }, false);\r\n    \r\n    return (\r\n        <a className={`${valueScroll > 100 ? 'square show' : 'square'}`}  onClick={(e) => handleClick(e)}>\r\n            <ArrowUpwardIcon/>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Sticky;","import React, { Component, useEffect, useState } from 'react';\r\nimport NavbarMovie from '../Component/Navbar';\r\nimport { fetchSearch, fetchTVSearch} from '../Component/data/data-api';\r\nimport {Link, useParams } from 'react-router-dom';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport Sticky from '../Component/sticky';\r\n\r\nfunction DataSearch({match}) {\r\n\r\n\r\n    // const { pages } = useParams();\r\n    // console.log(pages);\r\n\r\n    const params = match.params;\r\n\r\n    const [resultSearch, setResultSearch] = useState([[]]);\r\n    const [resultTVSearch, setResultTVSearch] = useState([[]]);\r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    const [currentPage, setCurrentPage] = useState();\r\n    const [inputSearch, totalPages] = resultSearch;\r\n    const [inputTVSearch, totalPagesTV] = resultTVSearch;\r\n    const [state,setState] = useState(params.type);\r\n\r\n    const pages = 122 ;\r\n    let test = Math.floor(Math.random() * pages);\r\n    console.log(totalPages);\r\n\r\n    let items = [];\r\n\r\n    if(params.type === 'movie') {\r\n        for(let number = 1; number <= totalPages; number++ ) {\r\n            items.push(number);\r\n        }\r\n    } else if(params.type === 'tv') {\r\n        for(let number = 1; number <= totalPagesTV; number++ ) {\r\n            items.push(number);\r\n        }\r\n    }\r\n\r\n     useEffect(() => {\r\n         const fetchAPI = async () => {\r\n             setInputValue(await params.id.replace('+',' '));\r\n             setCurrentPage(await Number(params.page));\r\n             setResultSearch(await fetchSearch(params.id.replace('+',' '), params.page));\r\n             setResultTVSearch(await fetchTVSearch(params.id.replace('+',' '), params.page));\r\n        }\r\n        fetchAPI();\r\n    },[currentPage]);\r\n\r\n    // // console.log(totalpages.length);\r\n    const pageLimit = (items1) => {\r\n            let dotinitial = '...';\r\n            let dotleft = '...';\r\n            let dotright = '...';\r\n\r\n            if(items1.length < 6) {\r\n                return items1;\r\n            } else if(currentPage >= 1 && currentPage <= 3) {\r\n                return [1, 2, 3, 4, dotinitial, items1.length]\r\n            } else if(currentPage === 4) {\r\n                const sliced = items1.slice(0,5);\r\n                console.log(sliced);\r\n                return [...sliced, dotinitial, items1.length];\r\n            } else if(currentPage > 4 && currentPage < items1.length - 2) {\r\n                const sliced1 = items1.slice(currentPage - 2, currentPage + 1);\r\n                console.log(sliced1);\r\n                return [1, dotleft, ...sliced1, dotright, items1.length]\r\n            } else if(currentPage > items1.length - 3) {\r\n                const sliced = items1.slice(items1.length - 4);\r\n                return [1, dotleft, ...sliced];\r\n            } \r\n    };\r\n\r\n    const page = pageLimit(items).map((number) => {\r\n            return (\r\n                <Pagination.Item \r\n                key={number} \r\n                id={number} \r\n                active={Number(params.page) === number} \r\n                // onClick={e => pageNumberClick(e)}\r\n                href={`page=${number}`}\r\n                \r\n                className={number === '...' ? 'disabled' : 'actived'}>\r\n                {number}\r\n                </Pagination.Item>\r\n            )\r\n        \r\n    })\r\n\r\n    console.log(pageLimit(items));\r\n\r\n    const paginations = (\r\n        <div >\r\n            <Pagination>\r\n                <a \r\n                className=\"btn-prev\" \r\n                href={`page=${currentPage === 1 ? currentPage : currentPage - 1}`}>\r\n                Prevs\r\n                </a>\r\n                {page}\r\n                <a \r\n                className=\"btn-next\" \r\n                // onClick={e => setPageNextClick(e)}\r\n                href={`page=${currentPage === items.length ? currentPage : currentPage + 1}`}>\r\n                Next\r\n                </a>\r\n            </Pagination>\r\n        </div>\r\n    )\r\n\r\n    const dataSearch = inputSearch.map((item,index) => {\r\n        return (\r\n            <div class=\"list-film\" key={index}>\r\n                <Link to={`../../../movie/${item.id}`}>\r\n                    <div class=\"poster\">\r\n                        <img src={item.poster} alt=\"\"/>\r\n                    </div>\r\n                    <p className=\"text-center p-1\">{item.title}</p>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const dataTVSearch = inputTVSearch.map((item,index) => {\r\n        return (\r\n            <div class=\"list-film\" key={index}>\r\n                <Link to={`../../../tv/${item.id}`}>\r\n                    <div class=\"poster\">\r\n                        <img src={item.poster} alt=\"\"/>\r\n                    </div>\r\n                    <p className=\"text-center p-1\">{item.title}</p>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const handleForm = async (e) => {\r\n        e.preventDefault();\r\n        window.location.href = `../q=${inputValue.replace(' ','+')}/page=1`;\r\n        // setResultSearch(await fetchSearch(inputValue,currentPage));\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <NavbarMovie/>\r\n            <div class=\"container\">\r\n                <form onSubmit={e => handleForm(e)}>\r\n                        <div class=\"search input-group mt-4\">\r\n                            <input type=\"text\" className=\"\" placeholder=\"Search...\" value={inputValue} onChange={e => setInputValue(e.target.value)} />\r\n                            <button  type=\"submit\" className=\"ml-auto\" value=\"submit\" >Search</button>\r\n                        </div>\r\n                    </form>\r\n                <p className=\"mt-2\">Hasil Pencarian dari {params.id.replace('+',' ')}</p>\r\n                <div class=\"type-search mt-1\">\r\n                        <Link className={`${state === 'movie' ? 'actived type-search-movie ' : 'type-search-movie'}`} onClick={() => setState('movie')} to={`../../movie/q=${inputValue.replace(' ','+')}/page=1`}>Movie <span>{totalPages}</span></Link>\r\n                        <Link className={`${state === 'tv' ? 'actived type-search-tv ml-2' : 'type-search-tv ml-2'}`} onClick={() => setState('tv')} to={`../../tv/q=${inputValue.replace(' ','+')}/page=1`}>TV Shows <span>{totalPagesTV}</span></Link>                        \r\n                    </div>\r\n                <div class=\"hasil-input mt-3\">\r\n                    {params.type === 'movie' ? dataSearch : dataTVSearch}\r\n                </div>\r\n                {paginations}\r\n                <Sticky/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default DataSearch;","import React, { Component, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { fetchSearch } from './data/data-api';\r\nimport DataSearch from '../View/Search';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Search } from '@material-ui/icons';\r\n\r\nexport function FormSearch(props) {\r\n\r\n    const [inputValue,setInputValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = () => {\r\n            // setSearch(await fetchSearch(inputValue));\r\n        }\r\n        fetchAPI();\r\n    },[])\r\n\r\n    const page = 1;\r\n    const type = 'movie';\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        window.location.href = `./search/${type}/q=${inputValue.replace(\" \", \"+\")}/page=${page}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit} >\r\n                <div class=\"search input-group mt-4\">\r\n                    <input type=\"text\" className=\"\" placeholder=\"Search...\" value={inputValue} onChange={e => setInputValue(e.target.value)} />\r\n                     <button  type=\"submit\" value=\"submit\" className='ml-auto' >Search</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport function FormSubmit() {\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\n\r\nclass FooterMovie extends Component {\r\n\r\n    render() {\r\n    // console.log('hello');\r\n\r\n        return(\r\n            <>\r\n            <div class=\"footer\">\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-7\">\r\n                            <h1>About <strong>US</strong></h1>\r\n                            <div className=\"desc mt-3\">\r\n                                <p >Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum neque pariatur debitis similique quisquam totam deserunt rerum, dicta asperiores voluptates nobis, ut voluptate provident cum facere velit, vel reprehenderit voluptatibus!</p>\r\n                                <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Praesentium, quisquam iure? Excepturi, modi iure doloremque cupiditate sed temporibus harum. Laudantium, placeat! Cupiditate sapiente enim est.</p>\r\n                                <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ratione nemo sapiente necessitatibus dolor vero ex cupiditate facilis aspernatur pariatur? Illum vel itaque temporibus unde repudiandae tempore debitis animi porro? Fuga deserunt est id inventore tenetur.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-5 my-auto\">\r\n                            <div className=\"location\">\r\n                                <p className=\"text-center my-2\">Serang, Banten, Indonesia</p>\r\n                            </div>\r\n\r\n                            <div class=\"info mt-5\">\r\n                                <a href=\"\">Information</a>\r\n                                <a href=\"\">Ratings</a>\r\n                                <a href=\"\">Language</a>\r\n                                <a href=\"\">Blogs</a>\r\n                                <a href=\"\">Contact Us</a>\r\n                                <a href=\"\">Privacy Policy</a>\r\n                                <a href=\"\">Faq</a>\r\n                                <a href=\"https://www.github.com/Warchair\">Github</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"footer-2\">\r\n                    <div class=\"container\">\r\n                        <p className=\"\">Movie<strong>GO</strong></p>\r\n                        <div class=\"sosmed\">\r\n                            <a href=\"https://www.instagram.com/anwar.chair\">\r\n                                <InstagramIcon fontSize=\"medium\"/>  \r\n                            </a>\r\n                            <a href=\"https://web.facebook.com/profile.php?id=100012292504457\">\r\n                                <FacebookIcon fontSize=\"medium\"/>   \r\n                            </a>\r\n                            <a href=\"https://www.twitter.com/people_bngsd\">\r\n                                <TwitterIcon fontSize=\"medium\"/>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterMovie;","import React, { Component, useState, useEffect, useRef } from 'react';\r\nimport { carousel} from '../Component/data/data-api';\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport ReactPlayer from 'react-player';\r\nimport {fetchTrailer} from '../Component/data/data-api';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nfunction CarouselMovies(props) {\r\n\r\n    const [selected, SetSelected] = useState(0);\r\n    const [carouselMovies, setCarouselMovies] = useState([]);\r\n    const [trailer, setTrailer] = useState([]);\r\n    const [valueTrailer, setValueTrailer] = useState({id:'', type:'',title:''});\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchMovies = async () => {\r\n            setCarouselMovies(await carousel());\r\n            setTrailer(await fetchTrailer(valueTrailer.id, valueTrailer.type));\r\n            // const timer = setInterval(() => {\r\n            //     SetSelected(selected => selected === 4 ? selected = 0 : selected + 1);\r\n            // },5000);\r\n            // return () => clearInterval(timer);\r\n        }\r\n        fetchMovies();\r\n        \r\n    },[valueTrailer.id]);\r\n\r\n    const input1 = carouselMovies.slice(0,5).map((item,index) => {\r\n        return (            \r\n            <input type=\"radio\" name=\"slider\" key={index} id={item.no} checked={index === selected} onClick={() => SetSelected(select => select = index)} className=\"carousel\"/>\r\n        )\r\n    });\r\n\r\n    const handleClick = (id, type, title) => { \r\n        setValueTrailer({id:id, type:type, title:title});\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const label1 = carouselMovies.slice(0,5).map((item) => {\r\n        return (\r\n            <label className=\"\" for={item.no} id={item.slide}>\r\n                <div className=\"icons\" >\r\n                    <PlayCircleOutlineIcon className=\"trailer-icons\" id=\"playbutton\" onClick={() => handleClick(item.id, 'movie', item.title)} />\r\n                </div>\r\n                <img src={item.backposter} alt={item.title}/>\r\n                <p className=\"mt-n5 text-center\">{item.title}</p>\r\n            </label>\r\n        )\r\n    });\r\n\r\n    const TrailerMovie = (props) => {\r\n        const YoutubeUrl = 'https://www.youtube.com/watch?v=';\r\n        const reactplayer = () => {\r\n            if(trailer === undefined) {\r\n                return <h6 className=\"text-center\" style={{color:'white'}}>Trailer is not Available</h6>\r\n            } else {\r\n                return (\r\n                    <ReactPlayer\r\n                    url={YoutubeUrl + trailer.key}\r\n                    playing\r\n                    width=\"100%\"\r\n                    />\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title\r\n                    id=\"contained-modal-title-vcenter\"\r\n                    style={{color:\"#000000\", fontWeight:\"bolder\" }}\r\n                    >\r\n                        {valueTrailer.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body\r\n                    style={{backgroundColor:\"#000000\"}}\r\n                >   \r\n                    {reactplayer()}\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    // console.log(valueTrailer.id, valueTrailer.type);\r\n\r\n    return (\r\n        <>\r\n            <TrailerMovie\r\n                show={isOpen}\r\n                onHide={() => {\r\n                    setIsOpen(false)\r\n                }}\r\n                />\r\n\r\n            <div className=\"trailer-news\">\r\n                {/* <p>Selected {selected} </p> */}\r\n                <div id=\"slider\">\r\n                    {input1}\r\n                    {label1}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CarouselMovies;","import React, { Component, useState, useEffect } from 'react';\r\nimport NavbarMovie from '../Component/Navbar';\r\nimport { InputGroup, Input, InputGroupAddon, Button} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {FormSearch} from '../Component/formSearch';\r\nimport FooterMovie from '../Component/FooterMovie';\r\nimport Sticky from '../Component/sticky';\r\nimport CarouselMovies from '../Component/carousel';\r\n\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\n\r\nimport { fetchPlaying, fetchTopRated, fetchTVPopular, fetchUpComing, carousel, fetchTVTopRated, fetchTVLatest, fetchTVOnTheAir, fetchTVAiringToday } from '../Component/data/data-api';\r\nimport sticky from '../Component/sticky';\r\n\r\nfunction Home() {\r\n\r\n    const [nowPlaying, setNowPlaying] = useState([]);\r\n    const [topRated, setTopRated] = useState([]);\r\n    const [upComing, setUpComing] = useState([]);\r\n    const [inicarousel, setInicarousel] = useState([]);\r\n    const [state,setState] = useState('movie');\r\n\r\n\r\n    const [tvPopular, setTvPopular] = useState([]);\r\n    const [tvTopRated, setTvTopRated] = useState([]);\r\n    const [tvLatest, setTvLatest] = useState([]);\r\n    const [tvOnTheAir, setTvOnTheAir] = useState([]);\r\n    const [tvAiringToday, setTvAiringToday] = useState([]);\r\n    const [autocarousel, setAutocarousel] = useState(0);\r\n\r\n    const [times, setTimes] = useState();\r\n\r\n        useEffect(() => {\r\n            const fetchAPI = async () => {\r\n                // setAutocarousel(await 1);\r\n                setNowPlaying(await fetchPlaying());\r\n                setTopRated(await fetchTopRated());\r\n                setUpComing(await fetchUpComing());\r\n                \r\n                setTvPopular(await fetchTVPopular());\r\n                setTvTopRated(await fetchTVTopRated());\r\n                setTvLatest(await fetchTVLatest());\r\n                setTvOnTheAir(await fetchTVOnTheAir());\r\n                setTvAiringToday(await fetchTVAiringToday());\r\n                setInicarousel(await carousel());\r\n            }\r\n            fetchAPI();\r\n        },[]);\r\n\r\n        const MoviesPlaying = nowPlaying.slice(0,15).map((item, index) => {\r\n            return(\r\n                <div className=\"items\" key={index}>\r\n                    <Link to={`${state}/${item.id}`}>\r\n                        <div class=\"poster\">\r\n                            <img src={item.poster} alt={item.title}/>\r\n                        </div>\r\n                        <p className=\"text-center mt-2\">{item.title}</p>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const MovieTopRated = topRated.slice(0,15).map((item, index) => {\r\n            return(\r\n                <div className=\"items\" key={index}>\r\n                    <Link to={`${state}/${item.id}`}> \r\n                    <div class=\"poster\">\r\n                        <img src={item.poster} alt={item.title}/>\r\n                    </div>\r\n                        <p className=\"text-center mt-2\">{item.title}</p>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        \r\n        const MovieUpComing = upComing.slice(0,15).map((item, index) => {\r\n            return(\r\n                <div className=\"items\" key={index}>\r\n                    <Link to={`${state}/${item.id}`}>\r\n                        <div class=\"poster\">\r\n                            <img src={item.poster} alt={item.title}/>\r\n                        </div>\r\n                        <p className=\"text-center mt-2\">{item.title}</p>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        // fetch category TV Shows\r\n\r\n        const tvShowsPopular = tvPopular.slice(0,15).map((item, index) => {\r\n            return(\r\n                <div className=\"items\" key={index}>\r\n                    <Link to={`${state}/${item.id}`}>\r\n                        <div class=\"poster\">\r\n                            <img src={item.poster} alt={item.title}/>\r\n                        </div>\r\n                        <p className=\"text-center mt-2\">{item.title}</p>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        const tvShowsTopRated = tvTopRated.slice(0,15).map((item, index) => {\r\n            return(\r\n                <div className=\"items\" key={index}>\r\n                    <Link to={`${state}/${item.id}`}>\r\n                        <div class=\"poster\">\r\n                            <img src={item.poster} alt={item.title}/>\r\n                        </div>\r\n                        <p className=\"text-center mt-2\">{item.title}</p>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        const tvShowsOnTheAir = tvOnTheAir.slice(0,15).map((item, index) => {\r\n            return(\r\n                <div className=\"items\" key={index}>\r\n                    <Link to={`${state}/${item.id}`}>\r\n                        <div class=\"poster\">\r\n                            <img src={item.poster} alt={item.title}/>\r\n                        </div>\r\n                        <p className=\"text-center mt-2\">{item.title}</p>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        });\r\n\r\n        const tvShowsAiringToday = tvAiringToday.slice(0,15).map((item, index) => {\r\n            return(\r\n                <div className=\"items\" key={index}>\r\n                    <Link to={`${state}/${item.id}`}>\r\n                        <div class=\"poster\">\r\n                            <img src={item.poster} alt={item.title}/>\r\n                        </div>\r\n                        <p className=\"text-center mt-2\">{item.title}</p>\r\n                    </Link>\r\n                </div>\r\n            )\r\n        });\r\n        const MovieList = (\r\n            <div>\r\n                <div class=\"movie-list mt-2\">\r\n                    <p className=\"title\">Now Playing</p>\r\n                    <div class=\"slider\">\r\n                    {MoviesPlaying}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"movie-list mt-1\">\r\n                    <p className=\"title\">Up Coming Movies</p>\r\n                    <div class=\"slider\">\r\n                    {MovieUpComing}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"movie-list mt-1\">\r\n                    <p className=\"title\">Top Rated Movies</p>\r\n                    <div class=\"slider\">\r\n                    {MovieTopRated}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        const TvShowsList = (\r\n            <div>\r\n                <div class=\"movie-list mt-2\">\r\n                    <p className=\"title\">TV Popular</p>\r\n                    <div class=\"slider\">\r\n                    {tvShowsPopular}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"movie-list mt-1\">\r\n                    <p className=\"title\">TV Shows Top Rated</p>\r\n                    <div class=\"slider\">\r\n                    {tvShowsTopRated}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"movie-list mt-1\">\r\n                    <p className=\"title\">TV Shows On The Air</p>\r\n                    <div class=\"slider\">\r\n                    {tvShowsOnTheAir}\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"movie-list mt-1\">\r\n                    <p className=\"title\">TV Shows Airing Today</p>\r\n                    <div class=\"slider\">\r\n                    {tvShowsAiringToday}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n            return (\r\n            <>\r\n                <NavbarMovie id=\"header\"/>\r\n                <div class=\"container \">\r\n                    <FormSearch/>\r\n                    <div class=\"news mt-4\">\r\n                        <p className=\"title\">Trailer Movies</p>\r\n                    </div>\r\n                </div>\r\n                <CarouselMovies carouselFetch={inicarousel} />\r\n                <div class=\"container mb-4\">\r\n                    <div class=\"choose mx-auto\">\r\n                        <button className={`${state === 'movie' ? 'actived choose-movie' : 'choose-movie'}`} onClick={() => setState('movie')}>Movie</button>\r\n                        <button className={`${state === 'tv' ? 'actived choose-tv' : 'choose-tv'}`} onClick={() => setState('tv')}>TV Shows</button>                        \r\n                    </div>\r\n                        {state === 'movie' ? MovieList : TvShowsList}\r\n                        <Sticky/>\r\n                </div>\r\n                <FooterMovie id=\"about-us\" />\r\n            </>\r\n        )\r\n}\r\n\r\nexport default Home;","import React, { Component, useEffect, useState } from 'react';\r\nimport { fetchCast, fetchCrews, fetchDetails, fetchSimilar, fetchTrailer, fetchRecommendMovie, fetchGenre, fetchImages } from '../Component/data/data-api';\r\nimport NavbarMovie from '../Component/Navbar';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RatingStars from 'react-rating-stars-component';\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport GradeIcon from '@material-ui/icons/Grade';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport FooterMovie from '../Component/FooterMovie';\r\nimport { Modal } from 'react-bootstrap';\r\nimport FormSearch from '../Component/formSearch';\r\nimport Sticky from '../Component/sticky';\r\n\r\nfunction Details({match}) {\r\n    const params = match.params;\r\n\r\n    const [details, setDetails] = useState([]); \r\n    const [trailer, setTrailer] = useState([]);\r\n    const [casts, setCasts] = useState([]); \r\n    const [crews, setCrews] = useState([]); \r\n    const [similar, setSimilar] = useState([]);\r\n    const [recommendMovie, setRecommendMovie] = useState([]);\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDetails(await fetchDetails(params.id, params.type));\r\n            setTrailer(await fetchTrailer(params.id, params.type));\r\n            setCasts(await fetchCast(params.id, params.type));\r\n            setCrews(await fetchCrews(params.id, params.type));\r\n            setSimilar(await fetchSimilar(params.id, params.type));\r\n            setRecommendMovie(await fetchRecommendMovie(params.id, params.type));\r\n            setImages(await fetchImages(params.type, params.id));\r\n            // setMovieGenre(await fetchGenre());\r\n        }\r\n        fetchAPI();\r\n    },[params.id, params.type]);\r\n\r\n    // const handleGenreClick = async (id) => {\r\n    //     setMovieGenre(await fetchGenre(id));\r\n    // }\r\n\r\n    const ImagesList = images.map((item, index) => {\r\n        return (\r\n            <div class=\"backdrops\" key={index}>\r\n                <div class=\"backdrops-image\">\r\n                    <img src={item.backdrop_path} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n\r\n\r\n    const castList = casts.slice(0,10).map((item, index) => {\r\n        return (\r\n            <div class=\"casts items\" key={index} >\r\n                <div class=\"poster\">\r\n                    <img src={item.image} alt=\"\"/>\r\n                </div>\r\n                <div class=\"desc text-center\">\r\n                    <p className=\"bold\">{item.name}</p>\r\n                    <p className=\"text-muted\">{item.character}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    const RecommendMovieList = recommendMovie.slice(0,15).map((item, index) => {\r\n        return (\r\n            <div class=\"items\" key={index}>\r\n                <Link to={`${item.id}`}>\r\n                    <div class=\"poster\">\r\n                        <img src={item.poster} alt=\"\"/>\r\n                    </div>\r\n                    <p>{item.title}</p>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const SimilarMovie = similar.slice(0,12).map((item, index) => {\r\n        return (\r\n            <div class=\"list-movie ml-auto\" key={index}>\r\n                <Link to={`${item.id}`}>\r\n                    <div class=\"poster\">\r\n                        <img src={item.poster} alt=\"\"/>\r\n                    </div>\r\n                    <p className=\"text-center\">{item.title}</p>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    let temp = [];\r\n    let director = [];\r\n    let screenplay = [];\r\n    let story = [];\r\n    let producer = [];\r\n    let exproducer = [];\r\n    let music = [];\r\n    let DoP = [];\r\n    \r\n    crews.map((items) => {\r\n        if(items.job === 'Director') {\r\n            director.push(items.name);\r\n        } else if(items.job === 'Screenplay') {\r\n            screenplay.push(items.name);\r\n        } else if(items.job === 'Story') {\r\n            story.push(items.name);\r\n        } else if(items.job === 'Producer') {\r\n            producer.push(items.name);\r\n        } else if(items.job === 'Executive Producer') {\r\n            exproducer.push(items.name);\r\n        } else if(items.job === 'Original Music Composer') {\r\n            music.push(items.name);\r\n        } else if(items.job === 'Director of Photography') {\r\n            DoP.push(items.name);\r\n        }\r\n\r\n    });\r\n\r\n\r\n    // genres \r\n    console.log(details);\r\n    const genre = details.genres;\r\n    let genreMovie;\r\n    if(genre) {\r\n        genreMovie = genre.map((val,i) => {\r\n            return (\r\n                <a href={`../genres/${params.type}/${val.id}/page=1`}>\r\n                    <span className=\"\" key={i}>{val.name}, </span>\r\n                </a>\r\n            )\r\n        })\r\n    }   \r\n\r\n    const runtime = details.runtime / 60 ;\r\n    const hour = Math.floor(runtime);\r\n    const minute = details.runtime % 60;\r\n\r\n    // trailer\r\n    console.log(trailer);\r\n    \r\n   \r\n    const TrailerMovie = (props) => {\r\n        const YoutubeUrl = 'https://www.youtube.com/watch?v=';\r\n        const reactplayer = () => {\r\n            if(trailer === undefined) {\r\n                return <h6 className=\"text-center\" style={{color:'white'}}>Trailer is not Available</h6>\r\n            } else {\r\n                return (\r\n                    <ReactPlayer\r\n                    url={YoutubeUrl + trailer.key}\r\n                    playing\r\n                    width=\"100%\"\r\n                    />\r\n                )\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title\r\n                    id=\"contained-modal-title-vcenter\"\r\n                    style={{color:\"#000000\", fontWeight:\"bolder\" }}\r\n                    >\r\n                        {details.title}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body\r\n                    style={{backgroundColor:\"#000000\"}}\r\n                >   \r\n                    {reactplayer()}\r\n                </Modal.Body>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    // console.log(details.production_companies);\r\n    return (\r\n        <>\r\n            <div class=\"movie-details\">\r\n                <NavbarMovie/>\r\n                <TrailerMovie\r\n                    show={isOpen}\r\n                    onHide={() => {\r\n                        setIsOpen(false)\r\n                    }}\r\n                />\r\n                <div class=\"container\">\r\n                    <div class=\"image-full mt-3\" style={{maxHeight:'400px', overflow:'hidden'}}>\r\n                        <img src={`https://image.tmdb.org/t/p/original/${details.backdrop_path}`} className=\"img-fluid\" alt=\"\"/>\r\n                    </div>\r\n                    <div class=\"row mt-2\">\r\n                        <div class=\"col-md-8\">\r\n                            <div class=\"details\">\r\n                                <img style={{maxHeight:'240px'}} src={`https://image.tmdb.org/t/p/original/${details.poster_path}`}  alt=\"\" className=\"img-fluid\"/>\r\n\r\n                                <div class=\"desc\">\r\n                                    <p className=\"title\">{params.type === 'movie' ? details.title  : details.name}</p>\r\n                                    <div class=\"detailing mt-1\">\r\n                                        <li>\r\n                                            {genreMovie}\r\n                                        </li>\r\n                                        <li>\r\n                                            {hour}h {minute}m\r\n                                        </li>\r\n                                    </div>\r\n                                    <RatingStars count={details.vote_average} size=\"30\" color=\"orange\" />\r\n                                    <div class=\"btn-click my-auto\">    \r\n                                        <div class=\"icons\">\r\n                                            <button>\r\n                                                <BookmarkIcon fontSize=\"medium\" />\r\n                                            </button>\r\n                                            <button>\r\n                                                <FavoriteIcon fontSize=\"medium\"/>\r\n                                            </button>\r\n                                            <button>\r\n                                                <GradeIcon fontSize=\"medium\"/>\r\n                                            </button>\r\n                                        </div>\r\n                                        <button className=\"btn btn-trailer \" onClick={() => setIsOpen(true)} >\r\n                                            <PlayArrowIcon fontSize=\"large\"/>\r\n                                            Watch Trailer\r\n                                        </button>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"other-details mt-4\">\r\n                                <div class=\"overview mt-2\">\r\n                                    <p className=\"title\">Overview</p>\r\n                                    <div class=\"desc\">\r\n                                        {details.overview}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"actor  mt-4\">\r\n                                    <p className=\"title\">Actor & Actress</p>\r\n                                    <div class=\"castList slider\">\r\n                                        {castList}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class=\"photos  mt-4\">\r\n                                    <p className=\"title\">Photos</p>\r\n                                    <div class=\"p-image\">\r\n                                        {ImagesList}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-4\">\r\n                        <div class=\"crews\">\r\n                                    <p className=\"title\">Crews</p>\r\n                                    <div className=\"crews-data\">\r\n                                        <div className=\"items\">\r\n                                            <p className=\"font-weight-bold\">Director</p>\r\n                                            <p className=\"mt-n2 text-muted\">{director.length === 0 ? '-' : director.join(', ')}</p>\r\n                                        </div>\r\n                                        <div className=\"items\">\r\n                                            <p className=\"font-weight-bold\">Producer</p>\r\n                                            <p className=\"mt-n2 text-muted\">{producer.length === 0 ? '-' : producer.join(', ')}</p>\r\n                                        </div>\r\n                                        <div className=\"items\">\r\n                                            <p className=\"font-weight-bold\">Executive Producer</p >\r\n                                            <p className=\"mt-n2 text-muted\">{exproducer.length === 0 ? '-' : exproducer.join(', ')}</p>\r\n                                        </div>\r\n                                        <div className=\"items\">\r\n                                            <p className=\"font-weight-bold\">Music of Photography</p>\r\n                                            <p className=\"mt-n2 text-muted\">{music.length === 0 ? '-' : music.join(', ')}</p>\r\n                                        </div>\r\n                                        <div className=\"items\">\r\n                                            <p className=\"font-weight-bold\">Director of Photography</p>\r\n                                            <p className=\"mt-n2 text-muted\">{DoP.length === 0 ? '-' : DoP.join(', ')}</p>\r\n                                        </div>\r\n                                        <div className=\"items\">\r\n                                            <p className=\"font-weight-bold\">Screenplay</p>\r\n                                            <p className=\"mt-n2 text-muted\">{screenplay.length === 0 ? '-' : screenplay.join(', ')}</p>\r\n                                        </div>\r\n                                        <div className=\"items\">\r\n                                            <p className=\"font-weight-bold\">Story</p>\r\n                                            <p className=\"mt-n2 text-muted\">{story.length === 0 ? '-' : story.join(', ')}</p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"more-info\">\r\n                                        <p className=\"title\">Other Informations</p>\r\n                                        <div class=\"items\">    \r\n                                            <p className=\"font-weight-bold\">Budget</p>\r\n                                            <p className=\"mt-n2 text-muted\">${details.budget}</p>\r\n                                        </div>\r\n                                        <div class=\"items\">\r\n                                            <p className=\"font-weight-bold\">Revenue</p>\r\n                                            <p className=\"mt-n2 text-muted\">${details.revenue}</p>\r\n                                        </div>\r\n                                        <div class=\"items\">\r\n                                            <p className=\"font-weight-bold\">Original Language</p>\r\n                                            <p className=\"mt-n2 text-muted\">{details.original_language}</p>\r\n                                        </div>\r\n                                        <div class=\"items\">\r\n                                            <p className=\"font-weight-bold\">Production Companies</p>\r\n                                            \r\n                                            {details.production_companies === undefined ? '-': details.production_companies.map((item,index) => {\r\n                                                return (\r\n                                                        <span key={index} className=\"text-muted\">{item.name}, </span>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"similar-movie\">    \r\n                            <p className=\"title ml-auto mt-4\">Similar Movie</p>\r\n                        <div class=\"sider\">\r\n                            {SimilarMovie}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"recommend-movie\">\r\n                        <p className=\"title\">Recommendations Movies</p>\r\n                        <div class=\"sider\">\r\n                            {RecommendMovieList}\r\n                        </div>\r\n                    </div>\r\n                    <Sticky/>\r\n                </div>\r\n                    <FooterMovie/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Details;","import React, { Component, useState, useEffect } from 'react';\r\nimport { fetchGenre } from '../Component/data/data-api';\r\nimport {Link } from 'react-router-dom';\r\nimport NavbarMovie from '../Component/Navbar';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport Sticky from '../Component/sticky';\r\n\r\nfunction Genres({match}) {\r\n\r\n    const params = match.params;\r\n    const [movieGenres, setMovieGenres] = useState([[]]);\r\n    const [active, setActive] = useState(1);\r\n    const [currentPage, setCurrentPage] = useState([]);\r\n\r\n    const [resultsGenres, totalPages] = movieGenres;\r\n    let items = [];\r\n    const test  = 15;\r\n    for (let number = 1; number <= totalPages; number++) {\r\n        items.push(number);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setCurrentPage(await Number(params.page));\r\n            setMovieGenres(await fetchGenre(params.id, params.type, params.page));\r\n        }\r\n\r\n        fetchAPI();\r\n    },[currentPage]);\r\n\r\n    const pageLimit = (item) => {\r\n        let dotinitial = '...';\r\n        let dotleft = '...';\r\n        let dotright = '...';\r\n\r\n        if(item.length < 6) {\r\n            return item;\r\n        } else if(currentPage >= 1 && currentPage <= 3) {\r\n            return [1, 2, 3, 4, dotinitial, item.length]\r\n        } else if(currentPage === 4) {\r\n            const sliced = item.slice(0,5);\r\n            console.log(sliced);\r\n            return [...sliced, dotinitial, item.length];\r\n        } else if(currentPage > 4 && currentPage < item.length - 2) {\r\n            const sliced1 = item.slice(currentPage - 2, currentPage + 1);\r\n            console.log(sliced1);\r\n            return [1, dotleft, ...sliced1, dotright, item.length]\r\n        } else if(currentPage > item.length - 3) {\r\n            const sliced = item.slice(item.length - 4);\r\n            return [1, dotleft, ...sliced];\r\n        } \r\n    };\r\n    console.log(pageLimit(items));\r\n\r\n    const page = pageLimit(items).map((number) => {\r\n        return (\r\n            <Pagination.Item \r\n                key={number} \r\n                id={number} \r\n                active={Number(params.page) === number} \r\n                // onClick={e => pageNumberClick(e)}\r\n                href={`page=${number}`}\r\n                \r\n                className={number === '...' ? 'disabled' : 'actived'}>\r\n                {number}\r\n                </Pagination.Item>\r\n        )\r\n    })\r\n\r\n\r\n\r\n    const paginations = (\r\n        <div class=\"\">\r\n            <Pagination>\r\n                <a \r\n                className=\"btn-prev\" \r\n                href={`page=${currentPage === 1 ? currentPage : currentPage - 1}`}>\r\n                Prevs\r\n                </a>\r\n                {page}\r\n                <a \r\n                className=\"btn-next\" \r\n                // onClick={e => setPageNextClick(e)}\r\n                href={`page=${currentPage === items.length ? currentPage : currentPage + 1}`}>\r\n                Next\r\n                </a>\r\n            </Pagination>\r\n        </div>\r\n    )\r\n\r\n    const MovieData = resultsGenres.map((item,index) => {\r\n        return (\r\n            <div key={index} className=\"list-movie\">\r\n                <Link to={`../../../movie/${item.id}`}>\r\n                    <div class=\"poster\">\r\n                        <img src={item.poster} alt=\"\"/>\r\n                    </div>\r\n                    <p className=\"p-1 text-center\">{item.title}</p>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <NavbarMovie/>\r\n            <div class=\"container\">\r\n                <div class=\"movie-genres mt-4\">\r\n                    {MovieData}\r\n                </div>\r\n                {paginations}\r\n                <Sticky/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Genres;","import {Switch, Route, Redirect } from 'react-router-dom';\r\nimport Home from './View/Home';\r\nimport Details from './View/Details';\r\nimport Genres from './View/Genres';\r\nimport Search from './View/Search';\r\n\r\nfunction App() {\r\n  return(\r\n    <Switch>\r\n      <Route path=\"/React-MovieDB-2/\" exact component={Home}/>\r\n      <Route path=\"/React-MovieDB-2/:type/:id\" exact component={Details} />\r\n      <Route path=\"/React-MovieDB-2/genres/:type/:id/page=:page\" exact component={Genres} />\r\n      <Route path=\"/React-MovieDB-2/search/:type/q=:id/page=:page\" exact component={Search}/>\r\n      <Redirect from=\"*\" to=\"/React-MovieDB-2/\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nimport './css/style.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}